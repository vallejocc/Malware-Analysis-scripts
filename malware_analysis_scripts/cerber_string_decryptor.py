#
# Author: Javier Vicente Vallejo (@vallejocc), http://www.vallejo.cc
#
# This script for idapython will decrypt Cerber ransomware strings and will create a comment with the 
# plaintext at the address where the encrypted string is and where the encrypted string is being decrypted.
#

import idaapi
import idc
import idautils
import struct

#######################

def KSA(key):
    keylength = len(key)

    S = range(256)

    j = 0
    for i in range(256):
        j = (j + S[i] + key[i % keylength]) % 256
        S[i], S[j] = S[j], S[i]  # swap

    return S

#######################

def PRGA(S):
    i = 0
    j = 0
    while True:
        i = (i + 1) % 256
        j = (j + S[i]) % 256
        S[i], S[j] = S[j], S[i]  # swap

        K = S[(S[i] + S[j]) % 256]
        yield K

#######################

def RC4keystream(key):
    S = KSA(key)
    return PRGA(S)

#######################
    
def convert_key(s):
    return [ord(c) for c in s]

#######################

def RC4(key, s):

    out = ""
    key = convert_key(key)
    keystream = RC4keystream(key)    
    for c in s:
        out += chr(ord(c) ^ keystream.next())
    return out

#######################

def e8near(ea):
    for i in range(0, 12):
        if Byte(ea+i)==0xe8:
            return 1
    return 0

#######################

print "--------------------------------"

segments = dict()

for seg_ea in Segments():

    for ea in range(seg_ea, SegEnd(seg_ea)):
    
        if Byte(ea) == 0x68 and Byte(ea+5)==0x6a and Byte(ea+5+2) == 0x68 and e8near(ea+5+2+5):
            
            key = chr(Byte(ea+1))+chr(Byte(ea+2))+chr(Byte(ea+3))+chr(Byte(ea+4))
            l = Byte(ea+6)
            penc = Dword(ea+8)
            senc = ""
            for i in range(0, l):
                senc += chr(Byte(penc+i))
            
            s = RC4(key, senc)
            
            print ">%x %x %d %x %s" % (ea, struct.unpack("L", key)[0], l, penc, s)
            
            MakeComm(penc, "decrypted string: %s" % s)
            MakeComm(ea, "decrypting string: %s" % s)

            